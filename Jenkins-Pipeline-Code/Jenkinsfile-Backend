pipeline {
    agent any 
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'

        // GCP Artifact Registry info
        GCP_PROJECT_ID = credentials('GCP_PROJECT_ID')   // stored in Jenkins credentials
        GCP_REGION = 'us-central1'
        GCP_REPO_NAME = 'backend-repo'
        REPOSITORY_URI = "${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${GCP_REPO_NAME}/backend"
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/Alpaccino04/Mernstack-Application-SourceCode.git'
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                dir('Application-Code/backend') {
                    withSonarQubeEnv('sonar-server') {
                        sh '''
                            $SCANNER_HOME/bin/sonar-scanner \
                            -Dsonar.projectKey=three-tier-back-end \
                            -Dsonar.projectName="three-tier-back-end" \
                            -Dsonar.sources=.
                        '''
                    }
                }
            }
        }

        stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }

        stage('OWASP Dependency-Check Scan') {
            steps {
                dir('Application-Code/backend') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }

        stage('Trivy File Scan') {
            steps {
                dir('Application-Code/backend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }

        stage("Docker Image Build") {
            steps {
                dir('Application-Code/backend') {
                    sh 'docker system prune -f'
                    sh 'docker container prune -f'
                    sh 'docker build -t ${REPOSITORY_URI}:${BUILD_NUMBER} .'
                }
            }
        }

        stage("Push Image to GCP Artifact Registry") {
            steps {
                script {
                    sh 'gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev -q'
                    sh 'docker push ${REPOSITORY_URI}:${BUILD_NUMBER}'
                }
            }
        }

        stage("Trivy Image Scan") {
            steps {
                sh 'trivy image ${REPOSITORY_URI}:${BUILD_NUMBER} > trivyimage.txt' 
            }
        }

        stage('Checkout Deployment Manifests') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/Alpaccino04/Mernstack-Application-SourceCode.git'
            }
        }

        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "Mernstack-Application-SourceCode"
                GIT_USER_NAME = "Alpaccino04"
            }
            steps {
                dir('Kubernetes-Manifests-file/Backend') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "cteressa65@gmail.com"
                            git config user.name "Alpaccino04"
                            imageTag=$(grep -oP '(?<=backend:)[^ ]+' deployment.yaml)
                            sed -i "s/${imageTag}/${BUILD_NUMBER}/" deployment.yaml
                            git add deployment.yaml
                            git commit -m "Update deployment Image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                        '''
                    }
                }
            }
        }
    }
}
